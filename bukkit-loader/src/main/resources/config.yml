# Do not modify this value
config-version: '${config_version}'
# Enables or disables debug mode
debug: false
# Enables or disables metrics collection via BStats
metrics: true
# Enables automatic update checks
update-checker: true
# Forces a specific locale (e.g., zh_cn)
force-locale: ''

resource-pack:
  # Should those images in minecraft:default font also work in minecraft:uniform
  override-uniform-font: true
  protection:
    # 0 = Disabled, 1 = Mild, 2 = Moderate, 3 = Severe
    protection: 1
    # Requirement: Protection must not be 0
    # 0 = Disabled, 1 = Simple obfuscation, 2 = Advanced obfuscation, 3 = Deep obfuscation (will increase file quantity and size)
    obfuscation: 1
    # When obfuscation is set to 3, the value is always 65528 (maximum allowed value is 65528)
    obfuscation-path-length: 40
  supported-version:
    min: "1.20"
    max: LATEST
  merge-external-folders:
    - ModelEngine/resource pack
  send:
    send-on-join: true
    send-on-reload: true
    kick-if-declined: true
    prompt: "<yellow>To fully experience our server, please accept our custom resource pack.</yellow>"
    # If you are hosting the resource pack by yourself, replace `localhost` with your server ip otherwise it would only work on your local pc
    # If using BungeeCord or Velocity, consider using a proxy-side plugin to handle resource pack delivery.
    mode: self-host # self-host/external-host/none
    self-host:
      ip: localhost
      port: 8163
      protocol: http
      deny-non-minecraft-request: true
      # If the path begins with `./` or `../`, it is treated as a relative path to the plugin folder.
      # Otherwise, it is considered an absolute path.
      local-file-path: "./generated/resource_pack.zip"
      rate-limit:
        max-requests: 3
        reset-interval: 30 # seconds
    external-host:
      url: ""
      sha1: ""
      uuid: ""
  duplicated-files-handler:
    - term:
        type: any_of
        terms:
          - type: parent_path_suffix
            suffix: "minecraft/items"
          - type: parent_path_suffix
            suffix: "minecraft/models/item"
      resolution:
        type: merge_json
        deeply: true
    - term:
        type: exact
        path: "pack.mcmeta"
      resolution:
        type: retain_matching
        term:
          type: contains
          path: "resources/default/resourcepack/"
    - term:
        type: exact
        path: "pack.png"
      resolution:
        type: retain_matching
        term:
          type: contains
          path: "resources/default/resourcepack"
    - term:
        type: filename
        name: "sounds.json"
      resolution:
        type: merge_json
        deeply: false

item:
  # Add a <!i> tag on item name and lore
  non-italic-tag: false

block:
  sound-system:
    enable: true

furniture:
  # Should the plugin remove invalid furniture on chunk load
  remove-invalid-furniture-on-chunk-load:
    enable: false
    # If you want to remove all invalid furniture, please set this list to empty, otherwise only furniture in the list will be removed.
    list:
      - "xxx:invalid_furniture"

recipe:
  enable: true

gui:
  browser:
    sounds:
      change-page: "minecraft:ui.loom.take_result"
      return-page: "minecraft:ui.button.click"
      pick-item: "minecraft:entity.item.pickup"
      click-button: "minecraft:ui.hud.bubble_pop"
    main:
      title: "<white><shift:-11><image:internal:item_browser>"
      page-navigation:
        next:
          available: "internal:next_page_0"
          not-available: "internal:next_page_1"
        previous:
          available: "internal:previous_page_0"
          not-available: "internal:previous_page_1"
    category:
      title: "<white><shift:-11><image:internal:category>"
      page-navigation:
        next:
          available: "internal:next_page_0"
          not-available: "internal:next_page_1"
        previous:
          available: "internal:previous_page_0"
          not-available: "internal:previous_page_1"
        return: "internal:return"
    recipe:
      get-item-icon: internal:get_item
      cooking-information-icon: internal:cooking_info
      page-navigation:
        next:
          available: "internal:next_recipe_0"
          not-available: "internal:next_recipe_1"
        previous:
          available: "internal:previous_recipe_0"
          not-available: "internal:previous_recipe_1"
        return: "internal:return"
      none:
        title: "<white><shift:-11><image:internal:no_recipe>"
      blasting:
        title: "<white><shift:-11><image:internal:cooking_recipe><shift:-136><image:internal:blasting>"
      smelting:
        title: "<white><shift:-11><image:internal:cooking_recipe><shift:-136><image:internal:smelting>"
      smoking:
        title: "<white><shift:-11><image:internal:cooking_recipe><shift:-136><image:internal:smoking>"
      campfire:
        title: "<white><shift:-11><image:internal:cooking_recipe><shift:-136><image:internal:campfire>"
      crafting:
        title: "<white><shift:-11><image:internal:crafting_recipe>"
      stonecutting:
        title: "<white><shift:-11><image:internal:stonecutting_recipe>"

performance:
  # Maximum chain update depth when fixing client visuals
  max-block-chain-update-limit: 64
  light-system:
    enable: true
    # Turning this option on will reduce lighting system issues to some extent, but will increase server bandwidth consumption
    force-update-light: false
  chunk-system:
    # Disabling this option prevents the plugin from converting custom blocks to vanilla states when chunks are unloaded.
    # While this can improve performance, custom blocks will turn into air if the plugin is uninstalled.
    restore-vanilla-blocks-on-chunk-unload: true
    # If you disable this, it's a must to disable the above option.
    restore-custom-blocks-on-chunk-load: true

offset-characters:
  font: minecraft:offset_chars
  -1: '\uf800'
  -2: '\uf801'
  -3: '\uf802'
  -4: '\uf803'
  -5: '\uf804'
  -6: '\uf805'
  -7: '\uf806'
  -8: '\uf807'
  -9: '\uf808'
  -10: '\uf809'
  -11: '\uf80a'
  -12: '\uf80b'
  -13: '\uf80c'
  -14: '\uf80d'
  -15: '\uf80e'
  -16: '\uf80f'
  -24: '\uf810'
  -32: '\uf811'
  -48: '\uf812'
  -64: '\uf813'
  -128: '\uf814'
  -256: '\uf815'
  1: '\uf830'
  2: '\uf831'
  3: '\uf832'
  4: '\uf833'
  5: '\uf834'
  6: '\uf835'
  7: '\uf836'
  8: '\uf837'
  9: '\uf838'
  10: '\uf839'
  11: '\uf83a'
  12: '\uf83b'
  13: '\uf83c'
  14: '\uf83d'
  15: '\uf83e'
  16: '\uf83f'
  24: '\uf840'
  32: '\uf841'
  48: '\uf842'
  64: '\uf843'
  128: '\uf844'
  256: '\uf845'